<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx.xsd"
	   default-autowire="byName">

	<bean id="redisConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!--一个pool可分配多少个jedis实例 -->
		<property name="maxTotal" value="${redis.pool.maxTotal}"/>

		<!--一个pool最多有多少个状态为idle(空闲)的jedis实例 -->
		<property name="maxIdle" value="${redis.pool.maxIdle}" />

		<!--获取jredis实例时最大的等待时间，超时则抛出JedisConnectionException-->
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />

		<!-- 在获取一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的 -->
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<bean id="jedisConnectionFactory" class="com.niuhome.framework.cache.redis.JedisPoolConnFactory">
		<constructor-arg name="jedisPoolConfig" ref="jedisPoolConfig"/>
		<constructor-arg name="host" value="${redis.host}"/>
		<constructor-arg name="port" value="${redis.port}"/>
		<constructor-arg name="needPassword" value="${redis.need.password}"/>
		<constructor-arg name="password" value="${redis.password}"/>
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean>

	<bean id="redisCache" class="com.niuhome.framework.cache.redis.RedisCache">
		<property name="redisTemplate" ref="redisTemplate"/>
	</bean>
</beans>